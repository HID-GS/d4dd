version: '2'
services:

## Applications Code Container #############################
  applications:
    image: tianon/true
    volumes:
#      - ${PROJECTS_PATH}/${DRUPAL_8}:/var/www/drupal
#      - ${PROJECTS_PATH}/${SYMFONY_2}:/var/www/symfony
      - ${PROJECTS_PATH}/${HID_D7}:/var/www/hidglobal
  mariadb:
    build:
      context: ./containers/mariadb
    volumes:
        - mysql:/var/lib/mysql
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: hidglobal
      MYSQL_USER: hidglobal
      MYSQL_PASSWORD: secret
  nginx:
    build:
      context: ./containers/nginx
      args:
          - PHP_UPSTREAM=php-fpm
    ports:
        - "80:80"
        - "443:443"
    volumes:
        - ./data/logs/nginx/:/var/log/nginx
    volumes_from:
        - php-fpm
    links:
        - php-fpm
  php-fpm:
    build:
      context: ./containers/php-fpm-alpine
    depends_on:
      - mariadb
    volumes:
      - ./data/logs/php/:/var/log
    links:
      - mariadb
    ports:
      - "9000"
    restart: always
    volumes_from:
      - applications
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    links:
      - mariadb:db
    ports:
      - 8181:80
    environment:
      mariadb_USERNAME: root
      mariadb_ROOT_PASSWORD: secret
  solr3:
    build: ./containers/solr-3.x
    ports:
      - 8983:8983
    restart: always
  grunt:
    build: ./containers/grunt
    volumes_from:
      - applications
    volumes:
      - ${PROJECTS_PATH}/${HID_D7}/hid/sites/all/themes/hidglobal:/var/www/theme
  redis:
    image: redis:alpine
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
  sonarqube:
    image: sonarqube:alpine
    ports:
      - "9000:9000"
      - "9092:9092"
    networks:
      - sonarnet
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
  postgres:
    image: postgres:alpine
    networks:
      - sonarnet
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
    volumes:
      - postgresql:/var/lib/postgresql
        # This needs explicit mapping due to https://github.com/docker-library/postgres/blob/4e48e3228a30763913ece952c611e5e9b95c8759/Dockerfile.template#L52
      - postgresql_data:/var/lib/postgresql/data
volumes:
  mysql:
  postgresql:
  postgresql_data:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
networks:
  sonarnet:
    driver: bridge