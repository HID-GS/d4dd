options:
  # default: docker-compose.yml if you like, you can set a custom location (path) of your compose file like ~/app/compose.yml
  compose-file-path: 'docker-compose.yml'

  # optional, default: docker-compose-dev.yml if you like, you can set a custom location (path) of your compose file. Do not set it, if you do not want to use it at all

  # if its there, it gets used, if you name it explicitly, it HAS to exist
  compose-dev-file-path: 'docker-compose-dev.yml'

  # optional, activate this if you need to debug something, default is false
  # IMPORTANT: do not run stable with this, it creates a memory leak, turn of verbose when you are done testin
  verbose: false

  # ADVANCED: default:eugenmayer/rsync -  the image to use for the rsync container. Do not change this until you exactly know, what you are doing
  # optional, default eugenmayer/rsync, you cannot just use "some unison" container, you entrypoint needs features, check the Dockerfiles
  rsync_image: 'eugenmayer/rsync'

  # ADVANCED: default:leighmcculloch/unison -  the image to use for the unison container. Do not change this until you exactly know, what you are doing
  # optional, default eugenmayer/unison, you cannot just use "some unison" container, you entrypoint needs features, check the Dockerfiles
  unison_image: 'eugenmayer/unison'

  # optional, default auto, can be docker-sync, thor or auto and defines how the sync will be invoked on the cli. Mostly depending if your are using docker-sync solo, scaffolded or in development ( thor )
  cli_mode: 'auto'

syncs:
  # IMPORTANT: this name must be unique and should NOT match your real application container name!
  codebase-rsync-sync:
    # enable terminal_notifier. On every sync sends a Terminal Notification regarding files being synced. ( Mac Only ).
    # good thing in case you are developing and want to know exactly when your changes took effect.
    # be aware in case of unison this only gives you a notification on the initial sync, not the syncs after changes.
    notify_terminal: true

    # which folder to watch / sync from - you can use tilde (~), it will get expanded. Be aware that the trailing slash makes a difference
    # if you add them, only the inner parts of the folder gets synced, otherwise the parent folder will be synced as top-level folder
    src: '~/Sites/hidglobal/hid'

    # which destination on the sync-container. Since you will use volumes_from to mount this, this should match your code-deployment location in the real container
    dest: '/var/www/hidglobal/hid'

    # when a port of a container is exposed, on which IP does it get exposed. Localhost for docker for mac, something else for docker-machine
    sync_host_ip: '127.0.0.1'
    #sync_args: '--delete' # delete files on the container if they are deleted on the host
    # should be a unique port this sync instance uses on the host to offer the rsync service on
    sync_host_port: 10871

    # optional, use this to map the files to a specific user on sync. Helps fixing permissions. You can use names and uids
    sync_user: 'www-data'

    # this does not user groupmap but rather configures the server to map
    # optional: usually if you map users you want to set the user id of your application container here
    sync_userid: '82'

    # optional, use this to map the files to a specific group on sync. Helps fixing permissions, You can use names and guids
    sync_group: 'www-data'

    # optional: usually if you map groups you want to set the group id of your application container here
    # this does not user groupmap but rather configures the server to map
    sync_groupid: '82'
  themebase-rsync-sync:
    notify_terminal: true
    #sync_args: '--delete' # delete files on the container if they are deleted on the host
    src: '~/Sites/hidglobal/hid/sites/all/themes/hidglobal'
    dest: '/var/www/theme'
    sync_host_ip: '127.0.0.1'
    sync_host_port: 10872

    # optional, use this to map the files to a specific user on sync. Helps fixing permissions. You can use names and uids
    sync_user: 'www-data'

    # this does not user groupmap but rather configures the server to map
    # optional: usually if you map users you want to set the user id of your application container here
    sync_userid: '82'

    # optional, use this to map the files to a specific group on sync. Helps fixing permissions, You can use names and guids
    sync_group: 'www-data'

    # optional: usually if you map groups you want to set the group id of your application container here
    # this does not user groupmap but rather configures the server to map
    sync_groupid: '82'